swagger: '2.0'
info:
  description: An automated watering system for plants.
  version: 0.1.0
  title: Planty
host: localhost
basePath: /planty
tags:
  - name: plant
  - name: humidity
schemes:
  - http
paths:
  /plant:
    post:
      tags:
        - plant
      summary: Add a new plant to the system
      description: ''
      operationId: addPlant
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Plant object that needs to be added to the system
          required: true
          schema:
            $ref: '#/definitions/Plant'
      responses:
        '405':
          description: Invalid input
    put:
      tags:
        - plant
      summary: Update an existing plant
      description: ''
      operationId: updatePlant
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Plant object that needs to be added to the system
          required: true
          schema:
            $ref: '#/definitions/Plant'
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Plant not found
        '405':
          description: Validation exception
  /plant/findByName:
    get:
      tags:
        - plant
      summary: Finds Plants by status
      description: Multiple status values can be provided with comma separated strings
      operationId: findPlantsByStatus
      produces:
        - application/xml
        - application/json
      parameters:
        - name: name
          in: query
          description: Status values that need to be considered for filter
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Plant'
        '400':
          description: Invalid status value
  '/plant/{plantId}':
    get:
      tags:
        - plant
      summary: Find plant by ID
      description: Returns a single plant
      operationId: getPlant
      produces:
        - application/xml
        - application/json
      parameters:
        - name: plantId
          in: path
          description: ID of plant to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Plant'
        '400':
          description: Invalid ID supplied
        '404':
          description: Plant not found
    post:
      tags:
        - plant
      summary: Updates a plant in the system with form data
      description: ''
      operationId: updatePlantWithForm
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/xml
        - application/json
      parameters:
        - name: plantId
          in: path
          description: ID of plant that needs to be updated
          required: true
          type: integer
          format: int64
        - name: name
          in: formData
          description: Updated name of the plant
          required: false
          type: string
        - name: status
          in: formData
          description: Updated status of the plant
          required: false
          type: string
      responses:
        '405':
          description: Invalid input
  '/plant/{plantId}/humidity':
    get:
      tags:
        - humidity
      summary: Find plant by ID
      description: Returns a single plant
      operationId: getPlantHumidy
      produces:
        - application/xml
        - application/json
      parameters:
        - name: plantId
          in: path
          description: ID of plant to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/HumidityInforation'
        '400':
          description: Invalid ID supplied
        '404':
          description: Plant not found
  '/plant/{plantId}/water':
    get:
      tags:
        - humidity
      summary: Find plant by ID
      description: Returns a single plant
      operationId: waterPlant
      produces:
        - application/xml
        - application/json
      parameters:
        - name: plantId
          in: path
          description: ID of plant to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: Plant not found
definitions:
  Plant:
    type: object
    required:
      - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        example: doggie
  HumidityInforation:
    type: object
    required:
      - plantId
    properties:
      plantId:
        type: integer
        format: int64
      humidity:
        type: integer
        format: int64
      humiditylog:
        type: array
        items:
          type: integer
          format: int64
      status:
        type: string
        description: plant status in the system
        enum:
          - ok
          - dry
          - watered
